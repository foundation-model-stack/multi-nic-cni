name: PR build 

on:
  pull_request_target:
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened
    paths:
      - .github/workflows/build_push_pr.yaml
      - controllers/**
      - internal/**
      - ./main.go
      - ./go.mod
      - config/**
      - ./Dockerfile
      - ./bundle.Dockerfile
      - ./Makefile
      - daemon/**
      - cni/**

env:
  VERSION: 1.2.9-pr-${{ github.event.pull_request.number }}
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}
  DAEMON_REGISTRY: ghcr.io/${{ github.repository_owner }}

jobs:
  build-push-controller:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ghcr.io/${{ github.repository }}-controller
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{github.event.pull_request.head.ref}}
          repository: ${{github.event.pull_request.head.repo.full_name}}
      - uses: actions/setup-go@v2
        with:
          go-version: '1.24.1'
      - name: Tidy
        run: |
          go mod tidy
          make generate fmt vet
      - name: Set up Docker
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.GH_USERNAME }}
          password: ${{ secrets.GH_TOKEN }}
      - name: Build and push controller
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:v${{ env.VERSION }}
          file: ./Dockerfile
  build-push-bundle:
    runs-on: ubuntu-latest
    needs: build-push-controller
    env:
      BUNDLE_IMAGE_NAME: ghcr.io/${{ github.repository }}-bundle
      CHANNELS: beta
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{github.event.pull_request.head.ref}}
          repository: ${{github.event.pull_request.head.repo.full_name}}
      - uses: actions/setup-go@v2
        with:
          go-version: '1.24.1'
      - name: set ARCH and OD
        run: |
            echo "ARCH=$(case $(uname -m) in x86_64) echo -n amd64 ;; aarch64) echo -n arm64 ;; *) echo -n $(uname -m) ;; esac)" >> $GITHUB_ENV
            echo "OS=$(uname | awk '{print tolower($0)}')" >> $GITHUB_ENV
            echo "OPERATOR_SDK_DL_URL=https://github.com/operator-framework/operator-sdk/releases/download/v1.39.2" >> $GITHUB_ENV
      - name: download operator-sdk
        run: curl -LO ${{ env.OPERATOR_SDK_DL_URL }}/operator-sdk_${{ env.OS }}_${{ env.ARCH }}
      - name: move operator-sdk to binary path
        run: chmod +x operator-sdk_${{ env.OS }}_${{ env.ARCH }} && sudo mv operator-sdk_${{ env.OS }}_${{ env.ARCH }} /usr/local/bin/operator-sdk
      - name: Tidy
        run: |
          go mod tidy
      - name: Make bundle
        run: make bundle
      - name: Set up Docker
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.GH_USERNAME }}
          password: ${{ secrets.GH_TOKEN }}
      - name: Build and push bundle
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ${{ env.BUNDLE_IMAGE_NAME }}:v${{ env.VERSION }}
          file: ./bundle.Dockerfile
  build-push-daemon:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ghcr.io/${{ github.repository }}-daemon
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{github.event.pull_request.head.ref}}
          repository: ${{github.event.pull_request.head.repo.full_name}}
      - uses: actions/setup-go@v2
        with:
          go-version: '1.23.0'
      - name: Set up Docker
        uses: docker/setup-buildx-action@v1
      - name: Update CNI
        run: make update-cni-local
        working-directory: daemon
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.GH_USERNAME }}
          password: ${{ secrets.GH_TOKEN }}
      - name: Build and push daemon
        uses: docker/build-push-action@v2
        with:
          context: daemon
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:v${{ env.VERSION }}
          file: ./daemon/dockerfiles/Dockerfile
