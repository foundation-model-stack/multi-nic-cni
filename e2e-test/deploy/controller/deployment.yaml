apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: multi-nic-cni-operator
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: cidrs.multinic.fms.io
spec:
  group: multinic.fms.io
  names:
    kind: CIDR
    listKind: CIDRList
    plural: cidrs
    singular: cidr
  scope: Cluster
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: CIDR is the Schema for the cidrs API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CIDRSpec defines the desired state of CIDR
            properties:
              cidr:
                items:
                  properties:
                    hosts:
                      items:
                        properties:
                          hostIP:
                            type: string
                          hostIndex:
                            type: integer
                          hostName:
                            type: string
                          interfaceName:
                            type: string
                          ippool:
                            type: string
                          podCIDR:
                            type: string
                        required:
                        - hostIP
                        - hostIndex
                        - hostName
                        - interfaceName
                        - ippool
                        - podCIDR
                        type: object
                      type: array
                    interfaceIndex:
                      type: integer
                    netAddress:
                      type: string
                    vlanCIDR:
                      type: string
                  required:
                  - hosts
                  - interfaceIndex
                  - netAddress
                  - vlanCIDR
                  type: object
                type: array
              config:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file'
                properties:
                  excludeCIDRs:
                    items:
                      type: string
                    type: array
                  hostBlock:
                    type: integer
                  interfaceBlock:
                    type: integer
                  masterNets:
                    items:
                      type: string
                    type: array
                  name:
                    type: string
                  subnet:
                    type: string
                  type:
                    type: string
                  vlanMode:
                    type: string
                required:
                - hostBlock
                - interfaceBlock
                - masterNets
                - name
                - subnet
                - type
                type: object
            required:
            - cidr
            - config
            type: object
          status:
            description: CIDRStatus defines the observed state of CIDR
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: configs.multinic.fms.io
spec:
  group: multinic.fms.io
  names:
    kind: Config
    listKind: ConfigList
    plural: configs
    singular: config
  scope: Cluster
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Config is the Schema for the configs API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ConfigSpec defines the desired state of Config
            properties:
              addRoutePath:
                type: string
              cniType:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file'
                type: string
              daemon:
                properties:
                  env:
                    items:
                      description: EnvVar represents an environment variable present
                        in a Container.
                      properties:
                        name:
                          description: Name of the environment variable. Must be a
                            C_IDENTIFIER.
                          type: string
                        value:
                          description: 'Variable references $(VAR_NAME) are expanded
                            using the previously defined environment variables in
                            the container and any service environment variables. If
                            a variable cannot be resolved, the reference in the input
                            string will be unchanged. Double $$ are reduced to a single
                            $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                            "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                            Escaped references will never be expanded, regardless
                            of whether the variable exists or not. Defaults to "".'
                          type: string
                        valueFrom:
                          description: Source for the environment variable's value.
                            Cannot be used if value is not empty.
                          properties:
                            configMapKeyRef:
                              description: Selects a key of a ConfigMap.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                            fieldRef:
                              description: 'Selects a field of the pod: supports metadata.name,
                                metadata.namespace, `metadata.labels[''<KEY>'']`,
                                `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                spec.serviceAccountName, status.hostIP, status.podIP,
                                status.podIPs.'
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath
                                    is written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the
                                    specified API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                            resourceFieldRef:
                              description: 'Selects a resource of the container: only
                                resources limits and requests (limits.cpu, limits.memory,
                                limits.ephemeral-storage, requests.cpu, requests.memory
                                and requests.ephemeral-storage) are currently supported.'
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes,
                                    optional for env vars'
                                  type: string
                                divisor:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Specifies the output format of the
                                    exposed resources, defaults to "1"
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                              required:
                              - resource
                              type: object
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's
                                namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  envFrom:
                    items:
                      description: EnvFromSource represents the source of a set of
                        ConfigMaps
                      properties:
                        configMapRef:
                          description: The ConfigMap to select from
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the ConfigMap must be defined
                              type: boolean
                          type: object
                        prefix:
                          description: An optional identifier to prepend to each key
                            in the ConfigMap. Must be a C_IDENTIFIER.
                          type: string
                        secretRef:
                          description: The Secret to select from
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret must be defined
                              type: boolean
                          type: object
                      type: object
                    type: array
                  image:
                    type: string
                  imagePullPolicy:
                    type: string
                  imagePullSecretName:
                    type: string
                  mounts:
                    items:
                      properties:
                        hostpath:
                          type: string
                        name:
                          type: string
                        podpath:
                          type: string
                      required:
                      - hostpath
                      - name
                      - podpath
                      type: object
                    type: array
                  nodeSelector:
                    additionalProperties:
                      type: string
                    type: object
                  port:
                    type: integer
                  resources:
                    description: ResourceRequirements describes the compute resource
                      requirements.
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  securityContext:
                    description: SecurityContext holds security configuration that
                      will be applied to a container. Some fields are present in both
                      SecurityContext and PodSecurityContext.  When both are set,
                      the values in SecurityContext take precedence.
                    properties:
                      allowPrivilegeEscalation:
                        description: 'AllowPrivilegeEscalation controls whether a
                          process can gain more privileges than its parent process.
                          This bool directly controls if the no_new_privs flag will
                          be set on the container process. AllowPrivilegeEscalation
                          is true always when the container is: 1) run as Privileged
                          2) has CAP_SYS_ADMIN Note that this field cannot be set
                          when spec.os.name is windows.'
                        type: boolean
                      capabilities:
                        description: The capabilities to add/drop when running containers.
                          Defaults to the default set of capabilities granted by the
                          container runtime. Note that this field cannot be set when
                          spec.os.name is windows.
                        properties:
                          add:
                            description: Added capabilities
                            items:
                              description: Capability represent POSIX capabilities
                                type
                              type: string
                            type: array
                          drop:
                            description: Removed capabilities
                            items:
                              description: Capability represent POSIX capabilities
                                type
                              type: string
                            type: array
                        type: object
                      privileged:
                        description: Run container in privileged mode. Processes in
                          privileged containers are essentially equivalent to root
                          on the host. Defaults to false. Note that this field cannot
                          be set when spec.os.name is windows.
                        type: boolean
                      procMount:
                        description: procMount denotes the type of proc mount to use
                          for the containers. The default is DefaultProcMount which
                          uses the container runtime defaults for readonly paths and
                          masked paths. This requires the ProcMountType feature flag
                          to be enabled. Note that this field cannot be set when spec.os.name
                          is windows.
                        type: string
                      readOnlyRootFilesystem:
                        description: Whether this container has a read-only root filesystem.
                          Default is false. Note that this field cannot be set when
                          spec.os.name is windows.
                        type: boolean
                      runAsGroup:
                        description: The GID to run the entrypoint of the container
                          process. Uses runtime default if unset. May also be set
                          in PodSecurityContext.  If set in both SecurityContext and
                          PodSecurityContext, the value specified in SecurityContext
                          takes precedence. Note that this field cannot be set when
                          spec.os.name is windows.
                        format: int64
                        type: integer
                      runAsNonRoot:
                        description: Indicates that the container must run as a non-root
                          user. If true, the Kubelet will validate the image at runtime
                          to ensure that it does not run as UID 0 (root) and fail
                          to start the container if it does. If unset or false, no
                          such validation will be performed. May also be set in PodSecurityContext.  If
                          set in both SecurityContext and PodSecurityContext, the
                          value specified in SecurityContext takes precedence.
                        type: boolean
                      runAsUser:
                        description: The UID to run the entrypoint of the container
                          process. Defaults to user specified in image metadata if
                          unspecified. May also be set in PodSecurityContext.  If
                          set in both SecurityContext and PodSecurityContext, the
                          value specified in SecurityContext takes precedence. Note
                          that this field cannot be set when spec.os.name is windows.
                        format: int64
                        type: integer
                      seLinuxOptions:
                        description: The SELinux context to be applied to the container.
                          If unspecified, the container runtime will allocate a random
                          SELinux context for each container.  May also be set in
                          PodSecurityContext.  If set in both SecurityContext and
                          PodSecurityContext, the value specified in SecurityContext
                          takes precedence. Note that this field cannot be set when
                          spec.os.name is windows.
                        properties:
                          level:
                            description: Level is SELinux level label that applies
                              to the container.
                            type: string
                          role:
                            description: Role is a SELinux role label that applies
                              to the container.
                            type: string
                          type:
                            description: Type is a SELinux type label that applies
                              to the container.
                            type: string
                          user:
                            description: User is a SELinux user label that applies
                              to the container.
                            type: string
                        type: object
                      seccompProfile:
                        description: The seccomp options to use by this container.
                          If seccomp options are provided at both the pod & container
                          level, the container options override the pod options. Note
                          that this field cannot be set when spec.os.name is windows.
                        properties:
                          localhostProfile:
                            description: localhostProfile indicates a profile defined
                              in a file on the node should be used. The profile must
                              be preconfigured on the node to work. Must be a descending
                              path, relative to the kubelet's configured seccomp profile
                              location. Must only be set if type is "Localhost".
                            type: string
                          type:
                            description: "type indicates which kind of seccomp profile
                              will be applied. Valid options are: \n Localhost - a
                              profile defined in a file on the node should be used.
                              RuntimeDefault - the container runtime default profile
                              should be used. Unconfined - no profile should be applied."
                            type: string
                        required:
                        - type
                        type: object
                      windowsOptions:
                        description: The Windows specific settings applied to all
                          containers. If unspecified, the options from the PodSecurityContext
                          will be used. If set in both SecurityContext and PodSecurityContext,
                          the value specified in SecurityContext takes precedence.
                          Note that this field cannot be set when spec.os.name is
                          linux.
                        properties:
                          gmsaCredentialSpec:
                            description: GMSACredentialSpec is where the GMSA admission
                              webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                              inlines the contents of the GMSA credential spec named
                              by the GMSACredentialSpecName field.
                            type: string
                          gmsaCredentialSpecName:
                            description: GMSACredentialSpecName is the name of the
                              GMSA credential spec to use.
                            type: string
                          hostProcess:
                            description: HostProcess determines if a container should
                              be run as a 'Host Process' container. This field is
                              alpha-level and will only be honored by components that
                              enable the WindowsHostProcessContainers feature flag.
                              Setting this field without the feature flag will result
                              in errors when validating the Pod. All of a Pod's containers
                              must have the same effective HostProcess value (it is
                              not allowed to have a mix of HostProcess containers
                              and non-HostProcess containers).  In addition, if HostProcess
                              is true then HostNetwork must also be set to true.
                            type: boolean
                          runAsUserName:
                            description: The UserName in Windows to run the entrypoint
                              of the container process. Defaults to the user specified
                              in image metadata if unspecified. May also be set in
                              PodSecurityContext. If set in both SecurityContext and
                              PodSecurityContext, the value specified in SecurityContext
                              takes precedence.
                            type: string
                        type: object
                    type: object
                  tolerations:
                    items:
                      description: The pod this Toleration is attached to tolerates
                        any taint that matches the triple <key,value,effect> using
                        the matching operator <operator>.
                      properties:
                        effect:
                          description: Effect indicates the taint effect to match.
                            Empty means match all taint effects. When specified, allowed
                            values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: Key is the taint key that the toleration applies
                            to. Empty means match all taint keys. If the key is empty,
                            operator must be Exists; this combination means to match
                            all values and all keys.
                          type: string
                        operator:
                          description: Operator represents a key's relationship to
                            the value. Valid operators are Exists and Equal. Defaults
                            to Equal. Exists is equivalent to wildcard for value,
                            so that a pod can tolerate all taints of a particular
                            category.
                          type: string
                        tolerationSeconds:
                          description: TolerationSeconds represents the period of
                            time the toleration (which must be of effect NoExecute,
                            otherwise this field is ignored) tolerates the taint.
                            By default, it is not set, which means tolerate the taint
                            forever (do not evict). Zero and negative values will
                            be treated as 0 (evict immediately) by the system.
                          format: int64
                          type: integer
                        value:
                          description: Value is the taint value the toleration matches
                            to. If the operator is Exists, the value should be empty,
                            otherwise just a regular string.
                          type: string
                      type: object
                    type: array
                required:
                - image
                - port
                type: object
              deleteRoutePath:
                type: string
              getInterfacePath:
                type: string
              ipamType:
                type: string
              joinPath:
                type: string
            required:
            - cniType
            - daemon
            - getInterfacePath
            - ipamType
            - joinPath
            type: object
          status:
            description: ConfigStatus defines the observed state of Config
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: deviceclasses.multinic.fms.io
spec:
  group: multinic.fms.io
  names:
    kind: DeviceClass
    listKind: DeviceClassList
    plural: deviceclasses
    singular: deviceclass
  scope: Cluster
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: DeviceClass is the Schema for the deviceclasses API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DeviceClassSpec defines the desired state of DeviceClass
            properties:
              ids:
                items:
                  properties:
                    products:
                      items:
                        type: string
                      type: array
                    vendor:
                      type: string
                  required:
                  - products
                  - vendor
                  type: object
                type: array
            required:
            - ids
            type: object
          status:
            description: DeviceClassStatus defines the observed state of DeviceClass
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: hostinterfaces.multinic.fms.io
spec:
  group: multinic.fms.io
  names:
    kind: HostInterface
    listKind: HostInterfaceList
    plural: hostinterfaces
    singular: hostinterface
  scope: Cluster
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: HostInterface is the Schema for the hostinterfaces API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: HostInterfaceSpec defines the desired state of HostInterface
            properties:
              hostName:
                type: string
              interfaces:
                items:
                  properties:
                    hostIP:
                      type: string
                    interfaceName:
                      type: string
                    netAddress:
                      type: string
                    pciAddress:
                      type: string
                    product:
                      type: string
                    vendor:
                      type: string
                  required:
                  - hostIP
                  - interfaceName
                  - netAddress
                  - pciAddress
                  - product
                  - vendor
                  type: object
                type: array
            required:
            - hostName
            - interfaces
            type: object
          status:
            description: HostInterfaceStatus defines the observed state of HostInterface
            properties:
              stat:
                properties:
                  count:
                    type: integer
                  interfaceName:
                    type: string
                  lastRx:
                    type: integer
                  lastRxDrop:
                    type: integer
                  lastTimestamp:
                    format: int64
                    type: integer
                  lastTx:
                    type: integer
                  lastTxDrop:
                    type: integer
                  rxDropRate:
                    type: integer
                  rxRate:
                    type: integer
                  txDropRate:
                    type: integer
                  txRate:
                    type: integer
                required:
                - count
                - interfaceName
                - lastRx
                - lastRxDrop
                - lastTimestamp
                - lastTx
                - lastTxDrop
                - rxDropRate
                - rxRate
                - txDropRate
                - txRate
                type: object
            required:
            - stat
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: ippools.multinic.fms.io
spec:
  group: multinic.fms.io
  names:
    kind: IPPool
    listKind: IPPoolList
    plural: ippools
    singular: ippool
  scope: Cluster
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: IPPool is the Schema for the ippools API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IPPoolSpec defines the desired state of IPPool
            properties:
              allocations:
                items:
                  properties:
                    address:
                      type: string
                    index:
                      type: integer
                    namespace:
                      type: string
                    pod:
                      type: string
                  required:
                  - address
                  - index
                  - namespace
                  - pod
                  type: object
                type: array
              excludes:
                items:
                  type: string
                type: array
              hostName:
                type: string
              interfaceName:
                type: string
              netAttachDef:
                type: string
              podCIDR:
                description: Foo is an example field of IPPool. Edit ippool_types.go
                  to remove/update
                type: string
              vlanCIDR:
                type: string
            required:
            - allocations
            - excludes
            - hostName
            - interfaceName
            - netAttachDef
            - podCIDR
            - vlanCIDR
            type: object
          status:
            description: IPPoolStatus defines the observed state of IPPool
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: multinicnetworks.multinic.fms.io
spec:
  group: multinic.fms.io
  names:
    kind: MultiNicNetwork
    listKind: MultiNicNetworkList
    plural: multinicnetworks
    singular: multinicnetwork
  scope: Cluster
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: MultiNicNetwork is the Schema for the multinicnetworks API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: 'MultiNicNetworkSpec defines the desired state of MultiNicNetwork
              MasterNetAddrs is network addresses of NIC members in the pool Subnet
              is global subnet, default: 172.30.0.0/16 IPAM is ipam specification
              MainPlugin is plugin specification Policy is general policy of the pool'
            properties:
              attachPolicy:
                description: AssignmentPolicy defines the policy to select the NICs
                  from the pool Strategy is one of None, CostOpt, PerfOpt, QoSClass
                  Target is target bandwidth in a format (d+)Gbps, (d+)Mbps, (d+)Kbps
                  required for CostOpt and PerfOpt
                properties:
                  strategy:
                    type: string
                  target:
                    type: string
                required:
                - strategy
                type: object
              ipam:
                type: string
              masterNets:
                items:
                  type: string
                type: array
              multiNICIPAM:
                type: boolean
              namespaces:
                items:
                  type: string
                type: array
              plugin:
                description: 'reference: github.com/containernetworking/cni/pkg/types'
                properties:
                  args:
                    additionalProperties:
                      type: string
                    type: object
                  capabilities:
                    additionalProperties:
                      type: boolean
                    type: object
                  cniVersion:
                    type: string
                  dns:
                    description: 'reference: github.com/containernetworking/cni/pkg/types'
                    properties:
                      domain:
                        type: string
                      nameservers:
                        items:
                          type: string
                        type: array
                      options:
                        items:
                          type: string
                        type: array
                      search:
                        items:
                          type: string
                        type: array
                    type: object
                  type:
                    type: string
                required:
                - cniVersion
                - type
                type: object
              subnet:
                type: string
            required:
            - ipam
            - plugin
            type: object
          status:
            description: MultiNicNetworkStatus defines the observed state of MultiNicNetwork
            properties:
              computeResults:
                items:
                  properties:
                    netAddress:
                      type: string
                    numOfHosts:
                      type: integer
                  required:
                  - netAddress
                  - numOfHosts
                  type: object
                type: array
              configStatus:
                type: string
              discovery:
                properties:
                  cidrProcessed:
                    type: integer
                  existDaemon:
                    type: integer
                  infoAvailable:
                    type: integer
                required:
                - cidrProcessed
                - existDaemon
                - infoAvailable
                type: object
              lastSyncTime:
                format: date-time
                type: string
              message:
                type: string
              routeStatus:
                type: string
            required:
            - computeResults
            - configStatus
            - discovery
            - lastSyncTime
            - message
            - routeStatus
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: multi-nic-cni-operator-controller-manager
  namespace: multi-nic-cni-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: multi-nic-cni-operator-leader-election-role
  namespace: multi-nic-cni-operator
rules:
- apiGroups:
  - ""
  - coordination.k8s.io
  resources:
  - configmaps
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: multi-nic-cni-operator-manager-role
rules:
- apiGroups:
  - multinic.fms.io
  resources:
  - cidrs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - multinic.fms.io
  resources:
  - cidrs/finalizers
  verbs:
  - update
- apiGroups:
  - multinic.fms.io
  resources:
  - cidrs/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - multinic.fms.io
  resources:
  - configs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - multinic.fms.io
  resources:
  - configs/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - multinic.fms.io
  resources:
  - hostinterfaces
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - multinic.fms.io
  resources:
  - hostinterfaces/finalizers
  verbs:
  - update
- apiGroups:
  - multinic.fms.io
  resources:
  - hostinterfaces/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - multinic.fms.io
  resources:
  - ippools
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - multinic.fms.io
  resources:
  - ippools/finalizers
  verbs:
  - update
- apiGroups:
  - multinic.fms.io
  resources:
  - ippools/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - multinic.fms.io
  resources:
  - multinicnetworks
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - multinic.fms.io
  resources:
  - multinicnetworks/finalizers
  verbs:
  - update
- apiGroups:
  - multinic.fms.io
  resources:
  - multinicnetworks/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: multi-nic-cni-operator-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: multi-nic-cni-operator-multi-nic-cni-k8s
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - nodes
  - namespaces
  verbs:
  - get
  - watch
  - list
  - patch
- apiGroups:
  - apps
  resources:
  - daemonsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: multi-nic-cni-operator-multi-nic-cni-netattachdef
rules:
- apiGroups:
  - k8s.cni.cncf.io
  resources:
  - network-attachment-definitions
  verbs:
  - create
  - update
  - get
  - watch
  - list
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: multi-nic-cni-operator-privileged-cr
rules:
- apiGroups:
  - security.openshift.io
  resourceNames:
  - privileged
  resources:
  - securitycontextconstraints
  verbs:
  - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: multi-nic-cni-operator-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: multi-nic-cni-operator-sriov-role
rules:
- apiGroups:
  - sriovnetwork.openshift.io
  resources:
  - sriovnetworknodestates
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - sriovnetwork.openshift.io
  resources:
  - sriovnetworknodepolicies
  - sriovibnetworks
  - sriovnetworks
  verbs:
  - create
  - delete
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: multi-nic-cni-operator-leader-election-rolebinding
  namespace: multi-nic-cni-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: multi-nic-cni-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: multi-nic-cni-operator-controller-manager
  namespace: multi-nic-cni-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: multi-nic-cni-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: multi-nic-cni-operator-manager-role
subjects:
- kind: ServiceAccount
  name: multi-nic-cni-operator-controller-manager
  namespace: multi-nic-cni-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: multi-nic-cni-operator-multi-nic-cni-k8s-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: multi-nic-cni-operator-multi-nic-cni-k8s
subjects:
- kind: ServiceAccount
  name: multi-nic-cni-operator-controller-manager
  namespace: multi-nic-cni-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: multi-nic-cni-operator-multi-nic-cni-netattachdef-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: multi-nic-cni-operator-multi-nic-cni-netattachdef
subjects:
- kind: ServiceAccount
  name: multi-nic-cni-operator-controller-manager
  namespace: multi-nic-cni-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: multi-nic-cni-operator-multi-nic-cni-privileged-cr-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: multi-nic-cni-operator-privileged-cr
subjects:
- kind: ServiceAccount
  name: multi-nic-cni-operator-controller-manager
  namespace: multi-nic-cni-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: multi-nic-cni-operator-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: multi-nic-cni-operator-proxy-role
subjects:
- kind: ServiceAccount
  name: multi-nic-cni-operator-controller-manager
  namespace: multi-nic-cni-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: multi-nic-cni-operator-sriov-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: multi-nic-cni-operator-sriov-role
subjects:
- kind: ServiceAccount
  name: multi-nic-cni-operator-controller-manager
  namespace: multi-nic-cni-operator
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8083
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 5aaf67fd.multinic.fms.io
kind: ConfigMap
metadata:
  name: multi-nic-cni-operator-manager-config
  namespace: multi-nic-cni-operator
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: multi-nic-cni-operator-controller-manager-metrics-service
  namespace: multi-nic-cni-operator
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: multi-nic-cni-operator-controller-manager
  namespace: multi-nic-cni-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --metrics-secure
        - --health-probe-bind-address=:8083
        - --metrics-bind-address=:8443
        - --leader-elect=false
        - --zap-log-level=10
        - --zap-stacktrace-level=error
        command:
        - /manager
        env:
        - name: OPERATOR_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        image: e2e-test/multi-nic-cni-controller:latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8083
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8083
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 100m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 500Mi
        securityContext:
          allowPrivilegeEscalation: false
      hostNetwork: true
      securityContext:
        runAsNonRoot: true
      serviceAccountName: multi-nic-cni-operator-controller-manager
      terminationGracePeriodSeconds: 10
